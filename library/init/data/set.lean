/-
Copyright (c) 2016 Microsoft Corporation. All rights reserved.
Released under Apache 2.0 license as described in the file LICENSE.
Authors: Leonardo de Moura
-/
prelude
import init.meta.interactive
import init.control.lawful

universes u v

structure set (Œ± : Type u) : Type u :=
of :: (contains : Œ± ‚Üí Prop)

namespace set
variables {Œ± : Type u} {Œ≤ : Type v}

instance : has_mem Œ± (set Œ±) :=
‚ü®Œª x s, s.contains x‚ü©

instance : has_subset (set Œ±) :=
‚ü®Œª s‚ÇÅ s‚ÇÇ, ‚àÄ ‚¶Éa‚¶Ñ, a ‚àà s‚ÇÅ ‚Üí a ‚àà s‚ÇÇ‚ü©

instance : has_sep Œ± (set Œ±) :=
‚ü®Œª p s, { a | a ‚àà s ‚àß p a}‚ü©

instance : has_emptyc (set Œ±) :=
‚ü®{ a | false }‚ü©

def univ : set Œ± :=
{ a | true }

instance : has_insert Œ± (set Œ±) :=
‚ü®Œª a s, { b | b = a ‚à® b ‚àà s }‚ü©

instance : has_singleton Œ± (set Œ±) := ‚ü®Œª a, { b | b = a }‚ü©

protected lemma ext {a b : set Œ±} (h : ‚àÄ x, x ‚àà a ‚Üî x ‚àà b) : a = b :=
begin
  cases a with a,
  cases b with b,
  simp [show a = b, from funext (Œª x, propext (h _))]
end

instance : is_lawful_singleton Œ± (set Œ±) :=
‚ü®Œª a, set.ext (Œª x, or_false _)‚ü©

instance : has_union (set Œ±) :=
‚ü®Œª s‚ÇÅ s‚ÇÇ, { a | a ‚àà s‚ÇÅ ‚à® a ‚àà s‚ÇÇ }‚ü©

instance : has_inter (set Œ±) :=
‚ü®Œª s‚ÇÅ s‚ÇÇ, { a | a ‚àà s‚ÇÅ ‚àß a ‚àà s‚ÇÇ }‚ü©

def compl (s : set Œ±) : set Œ± :=
{a | a ‚àâ s}

instance : has_sdiff (set Œ±) :=
‚ü®Œª s t, { a ‚àà s | a ‚àâ t }‚ü©

def powerset (s : set Œ±) : set (set Œ±) :=
{t | t ‚äÜ s}
prefix `ùí´`:100 := powerset

@[reducible]
def sUnion (s : set (set Œ±)) : set Œ± := {t | ‚àÉ a ‚àà s, t ‚àà a}
prefix `‚ãÉ‚ÇÄ`:110 := sUnion

def image (f : Œ± ‚Üí Œ≤) (s : set Œ±) : set Œ≤ :=
{b | ‚àÉ a, a ‚àà s ‚àß f a = b}

instance : functor set :=
{ map := @set.image }

instance : is_lawful_functor set :=
{ id_map := Œª _ s, set.ext $ Œª b, ‚ü®Œª ‚ü®_, sb, rfl‚ü©, sb, Œª sb, ‚ü®_, sb, rfl‚ü©‚ü©,
  comp_map := Œª _ _ _ g h s, set.ext $ Œª c,
    ‚ü®Œª ‚ü®a, ‚ü®h‚ÇÅ, h‚ÇÇ‚ü©‚ü©, ‚ü®g a, ‚ü®‚ü®a, ‚ü®h‚ÇÅ, rfl‚ü©‚ü©, h‚ÇÇ‚ü©‚ü©,
     Œª ‚ü®b, ‚ü®‚ü®a, ‚ü®h‚ÇÅ, h‚ÇÇ‚ü©‚ü©, h‚ÇÉ‚ü©‚ü©, ‚ü®a, ‚ü®h‚ÇÅ, by dsimp; cc‚ü©‚ü©‚ü© }

end set
